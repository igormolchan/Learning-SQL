-- creating tables and foreighn keys
   
    CREATE TABLE t_supplier (
        id_supplier NUMBER(10,0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        moniker VARCHAR2(20 CHAR) NOT NULL UNIQUE,
        name VARCHAR2(50 CHAR) NOT NULL,
        PRIMARY KEY (id_supplier)
    );
    
    CREATE TABLE t_supply (
        id_supply NUMBER(10,0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        code VARCHAR2(30 CHAR),
        num VARCHAR2(30 CHAR),
        dt DATE NOT NULL,
        id_supplier NUMBER(10,0) NOT NULL,
        e_state VARCHAR2(10) NOT NULL,
        summa NUMBER(14,2),
        nds NUMBER(14,2),
        PRIMARY KEY (id_supply),
		CONSTRAINT check_positive_supply_summa CHECK (summa >= 0),
		CONSTRAINT check_positive_supply_nds CHECK (nds >= 0)
    );
    
    CREATE TABLE t_supply_str (
        id_supply_str NUMBER(10,0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        id_supply NUMBER (10,0) NOT NULL,
        num NUMBER(6,0),
        id_ware NUMBER (10,0) NOT NULL,
        qty NUMBER(6,0) NOT NULL,
        price NUMBER (8,2) NOT NULL, 
        summa NUMBER(14,2),
        nds NUMBER (14,2),
        PRIMARY KEY (id_supply_str),
		CONSTRAINT check_positive_supply_str_summa CHECK (summa >= 0),
		CONSTRAINT check_positive_supply_str_nds CHECK (nds >= 0),
		CONSTRAINT check_positive_supply_str_qty CHECK (qty >= 0),
		CONSTRAINT check_positive_supply_str_price CHECK (price >= 0)
    );
    
    CREATE TABLE t_ware (
        id_ware NUMBER(10,0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        moniker VARCHAR2 (20 CHAR) NOT NULL UNIQUE,
        name VARCHAR2(50 CHAR) NOT NULL,
        id_model NUMBER (10,0) NOT NULL,
        sz_orig VARCHAR2(30 CHAR) NOT NULL,
        sz_rus VARCHAR2(30 CHAR) NOT NULL,
        price NUMBER(8,2),
        PRIMARY KEY (id_ware)
    );
    
    CREATE TABLE t_rest (
        id_ware NUMBER(10,0),
        qty NUMBER(6,0),
        PRIMARY KEY (id_ware)
		--CONSTRAINT check_positive_rest_qty CHECK (qty >= 0)
    );
    
    CREATE TABLE t_rest_hist (
        id_ware NUMBER(10,0),
        dt_beg DATE NOT NULL,
        dt_end DATE DEFAULT DATE '2099-12-31',
        qty NUMBER(6,0),
        PRIMARY KEY (id_ware, dt_beg),
        CONSTRAINT check_rest_hist_date_interval CHECK (dt_end >= dt_beg)
    );
    
    CREATE TABLE t_price_ware (
        id_ware NUMBER(10,0),
        price NUMBER(8,2),
        margin NUMBER (3,0) NOT NULL,
        PRIMARY KEY (id_ware),
		CONSTRAINT check_positive_ware_price CHECK (price >= 0),
		CONSTRAINT check_positive_ware_margin CHECK (margin >= 0)
    );
    
    CREATE TABLE t_price_ware_hist (        
        id_ware NUMBER(10,0),
        dt_beg DATE NOT NULL,
        dt_end DATE DEFAULT DATE'2099-12-31',
        price NUMBER(8,2) NOT NULL,
        PRIMARY KEY (id_ware, dt_beg),
        CONSTRAINT check_price_ware_date_interval CHECK (dt_end >= dt_beg),
		CONSTRAINT check_positive_ware_price_hist CHECK (price >= 0)
    );
    
    CREATE TABLE t_sale_rep (
        id_ware NUMBER(10,0) NOT NULL,
        month DATE NOT NULL,
        inp_qty NUMBER(6,0) DEFAULT 0,
        inp_sum NUMBER(14,2) DEFAULT 0,
        supply_qty NUMBER(6,0) DEFAULT 0,
        supply_sum NUMBER(14,2) DEFAULT 0,
        sale_qty NUMBER(6,0) DEFAULT 0,
        sale_sum NUMBER(14,2) DEFAULT 0,
        out_qty NUMBER(6,0) DEFAULT 0,
        out_sum NUMBER(14,2) DEFAULT 0,
        PRIMARY KEY (id_ware, month),
        CONSTRAINT check_date_is_month CHECK (month = TRUNC( month, 'MM' ))--,
		/*CONSTRAINT check_positive_sale_rep_hist_inp_qty CHECK (inp_qty >= 0),
		CONSTRAINT check_positive_sale_rep_hist_inp_sum CHECK (inp_sum >= 0),
		CONSTRAINT check_positive_sale_rep_hist_supply_qty CHECK (supply_qty >= 0),
		CONSTRAINT check_positive_sale_rep_hist_supply_sum CHECK (supply_sum >= 0),
		CONSTRAINT check_positive_sale_rep_hist_sale_qty CHECK (sale_qty >= 0),
		CONSTRAINT check_positive_sale_rep_hist_sale_sum CHECK (sale_sum >= 0),
		CONSTRAINT check_positive_sale_rep_hist_out_qty CHECK (out_qty >= 0),
		CONSTRAINT check_positive_sale_rep_hist_out_sum CHECK (out_sum >= 0)*/		
    );
    
     CREATE TABLE t_sale_str (
        id_sale_str NUMBER(10,0)GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        id_sale NUMBER(10,0) NOT NULL,
        num NUMBER(6,0),
        id_ware NUMBER(10,0) NOT NULL,
        qty NUMBER(6,0) NOT NULL,
        price NUMBER(8,2),
        discount NUMBER(8,6) DEFAULT 0,
        disc_price NUMBER(8,2),
        summa NUMBER(14,2),
        nds NUMBER(14,2),
        PRIMARY KEY (id_sale_str),
		CONSTRAINT check_positive_sale_str_qty CHECK (qty >= 0),
		CONSTRAINT check_positive_sale_str_discount CHECK (discount >= 0),
		CONSTRAINT check_positive_sale_str_price CHECK (price >= 0),
		CONSTRAINT check_positive_sale_str_disc_price CHECK (disc_price >= 0),
		CONSTRAINT check_positive_sale_str_summa CHECK (summa >= 0),
		CONSTRAINT check_positive_sale_str_nds CHECK (nds >= 0)
    );
    
    CREATE TABLE t_sale (
        id_sale NUMBER(10,0)GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        num VARCHAR2(30),
        dt DATE NOT NULL,
        id_client NUMBER(10,0) NOT NULL,
        e_state VARCHAR2(10) NOT NULL,
        discount NUMBER(8,6) DEFAULT 0,
        summa NUMBER(14,2),
        nds NUMBER(14,2),
        PRIMARY KEY (id_sale),
		CONSTRAINT check_positive_sale_discount CHECK (discount >= 0),
		CONSTRAINT check_positive_sale_summa CHECK (summa >= 0),
		CONSTRAINT check_positive_sale_nds CHECK (nds >= 0)
    );
    
    CREATE TABLE t_client (
        id_client NUMBER(10,0)GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        id_dept NUMBER(10,0) NOT NULL,
        moniker VARCHAR2(20) NOT NULL,
        name VARCHAR2(30) NOT NULL,
        is_vip NUMBER(1) NOT NULL,
        town VARCHAR2(30) NOT NULL,
        PRIMARY KEY (id_client)
    );
    
    CREATE TABLE t_dept (
        id_dept NUMBER(10,0)GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        name VARCHAR2(30) NOT NULL UNIQUE,
        id_parent NUMBER(10,0),
        PRIMARY KEY (id_dept)
    );
    
    CREATE TABLE t_model (
        id_model NUMBER(10,0)GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        moniker VARCHAR2(20 CHAR) NOT NULL,
        name VARCHAR2(30) NOT NULL,
        id_node NUMBER(10,0) NOT NULL,
        grp VARCHAR2(30 CHAR) NOT NULL,
        subgrp VARCHAR2(30 CHAR) NOT NULL,
        label VARCHAR(30 CHAR) NOT NULL,
        price NUMBER(8,2),
        PRIMARY KEY (id_model)
    );
    
    CREATE TABLE t_price_model (
        id_model NUMBER(10,0),
        price NUMBER(8,2),
        PRIMARY KEY (id_model),
		CONSTRAINT check_positive_model_price CHECK (price >= 0)
    );
    
    CREATE TABLE t_price_model_hist (
        id_model NUMBER(10,0),
        dt_beg DATE NOT NULL,
        dt_end DATE DEFAULT DATE'2099-12-31',
        price NUMBER(8,2) NOT NULL,
        PRIMARY KEY (id_model, dt_beg),
        CONSTRAINT check_price_model_date_interval CHECK (dt_end>=dt_beg),
		CONSTRAINT check_positive_model_price_hist CHECK (price >= 0)
    );
    
    CREATE TABLE t_ctl_node (
        id_ctl_node NUMBER(10,0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 100000,
        id_parent NUMBER(10,0),
        code VARCHAR2(12 CHAR),
        tree_code VARCHAR2(240 CHAR),
        name VARCHAR2(30 CHAR) NOT NULL,
        PRIMARY KEY (id_ctl_node)
    );
    
    ALTER TABLE t_supply
        ADD CONSTRAINT supply_supplier_fk 
        FOREIGN KEY (id_supplier) 
        REFERENCES t_supplier
        ON DELETE CASCADE;
    
    ALTER TABLE t_supply_str
        ADD CONSTRAINT supply_str_supply_fk 
        FOREIGN KEY (id_supply) 
        REFERENCES t_supply
        ON DELETE CASCADE;
    
    ALTER TABLE t_supply_str    
        ADD CONSTRAINT supply_ware_fk 
        FOREIGN KEY (id_ware) 
        REFERENCES t_ware
        ON DELETE CASCADE;
	
	ALTER TABLE t_rest    
        ADD CONSTRAINT rest_ware_fk 
        FOREIGN KEY (id_ware) 
        REFERENCES t_ware
        ON DELETE CASCADE;	
        
    ALTER TABLE t_rest_hist    
        ADD CONSTRAINT rest_hist_ware_fk 
        FOREIGN KEY (id_ware) 
        REFERENCES t_ware
        ON DELETE CASCADE;
    
    ALTER TABLE t_ctl_node    
        ADD CONSTRAINT node_node_parent_fk 
        FOREIGN KEY (id_parent) 
        REFERENCES t_ctl_node
        ON DELETE CASCADE; 
    
    ALTER TABLE t_model    
        ADD CONSTRAINT model_node_fk 
        FOREIGN KEY (id_node) 
        REFERENCES t_ctl_node;
        
    ALTER TABLE t_price_model    
        ADD CONSTRAINT model_price_model_fk 
        FOREIGN KEY (id_model) 
        REFERENCES t_model
        ON DELETE CASCADE;
        
    ALTER TABLE t_ware    
        ADD CONSTRAINT model_fk 
        FOREIGN KEY (id_model) 
        REFERENCES t_model
        ON DELETE SET NULL;
        
    ALTER TABLE t_price_ware    
        ADD CONSTRAINT price_ware_fk 
        FOREIGN KEY (id_ware) 
        REFERENCES t_ware
        ON DELETE CASCADE;
        
    ALTER TABLE t_dept    
        ADD CONSTRAINT dept_dept_parent_fk 
        FOREIGN KEY (id_parent) 
        REFERENCES t_dept
        ON DELETE SET NULL;
        
    ALTER TABLE t_client    
        ADD CONSTRAINT client_dept_fk 
        FOREIGN KEY (id_dept) 
        REFERENCES t_dept
        ON DELETE SET NULL;
        
    ALTER TABLE t_sale    
        ADD CONSTRAINT sale_client_fk 
        FOREIGN KEY (id_client) 
        REFERENCES t_client
        ON DELETE CASCADE;
        
    ALTER TABLE t_sale_str
        ADD CONSTRAINT sale_str_sale_fk 
        FOREIGN KEY (id_sale) 
        REFERENCES t_sale
        ON DELETE CASCADE;    
        
    ALTER TABLE t_sale_str    
        ADD CONSTRAINT sale_ware_fk 
        FOREIGN KEY (id_ware) 
        REFERENCES t_ware
        ON DELETE CASCADE;
    
	ALTER TABLE t_sale_rep    
        ADD CONSTRAINT sale_rep_ware_fk 
        FOREIGN KEY (id_ware) 
        REFERENCES t_ware
        ON DELETE CASCADE;
